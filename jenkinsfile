node {  
    bat "cd>current_path"
    echo '1'
   env.WORKSPACE = readFile 'current_path'
    env.PATH = "${tool 'Maven3'}/bin:${env.PATH}"
   echo '2'
   env.WORKSPACE = env.WORKSPACE.trim()
   echo '3'
   stage('Preparation') {
      mvnHome = tool 'Maven3'
      //dockerHome=tool 'Docker1'
      
   }
   stage ("checkout")
     checkout scm   
    
   stage "analyze code"
    bat "mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent-integration install -Dmaven.test.failure.ignore=true -Dskip.integration.test=true"
    bat "mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.sources=src/main" 
   
   stage ('build')
   bat 'mvn -DskipTests clean package'
   
  // stage('Publish') {
   //  nexusPublisher nexusInstanceId: 'NexusServer', nexusRepositoryId: 'releases', packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', filePath: '/var/jenkins_home/workspace/Sample-Pipeline/target/BarclayDemoApp.jar']], mavenCoordinate: [artifactId: 'BarclayDemoApp', groupId: 'com.barclay.demo', packaging: 'jar', version: '0.0.1']]]

  // }
   
    stage('Create Docker Image'){
      withDockerServer([credentialsId: '260c91bd-ea55-4d23-afad-16b49c18955d', uri: 'tcp://192.168.99.100:2376']) {
            bat "docker build  -t suddasgu/docker-berclay-pipeline:${BUILD_NUMBER} ${env.WORKSPACE}"
            }    
    }
    
    stage ('Run Application') {
    try {
     withDockerServer([credentialsId: '260c91bd-ea55-4d23-afad-16b49c18955d', uri: 'tcp://192.168.99.100:2376']){
      // Start database container here
      bat "docker run --name mongo_cn -d -p 27017:27017 mongo"
      // Run application using Docker image
      bat "docker run -p 8095:8095 --name spring_cn suddasgu/docker-berclay-pipeline:${env.BUILD_NUMBER}"
      
      }
      
    } catch (error) {
    } finally {
      
    }
  }
   stage 'exit'
   currentBuild.result = 'SUCCESS'
   return
   }
